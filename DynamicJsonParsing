package json;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Iterator;

import org.json.JSONArray;
import org.json.JSONObject;
import org.json.simple.parser.ParseException;

public class ParseDynamicJson {

	
	public static void parseObject(JSONObject json, String key) {
		if (json.has(key)) {
			System.out.print(key+" : ");
			System.out.println(json.get(key));
			
			/*
			 * JSONArray ja = (JSONArray) json.get(key); for (int i = 0; i < ja.length();
			 * i++) { System.out.println(ja.get(i)); JSONObject jsonObject1 = (JSONObject)
			 * ja.get(i); System.out.println(jsonObject1.get("type")); }
			 */
		}
		
	}

	public static void getKey(JSONObject json, String key) {

		boolean exists = json.has(key);
		Iterator<?> keys;
		String nextKeys;

		if (!exists) {
			keys = json.keys();
			while (keys.hasNext()) {
				nextKeys = (String) keys.next();
				try {

					if (json.get(nextKeys) instanceof JSONObject) {

						if (exists == false) {
							getKey(json.getJSONObject(nextKeys), key);
						}

					} else if (json.get(nextKeys) instanceof JSONArray) {
						JSONArray jsonarray = json.getJSONArray(nextKeys);
						for (int i = 0; i < jsonarray.length(); i++) {
							String jsonarrayString = jsonarray.get(i).toString();
							JSONObject innerJSOn = new JSONObject(jsonarrayString);

							if (exists == false) {
								getKey(innerJSOn, key);
							}

						}

					}

				} catch (Exception e) {
					// TODO: handle exception
				}

			}

		} else {
			parseObject(json, key);
		}

	}

	public static void main(String[] args) throws FileNotFoundException, IOException, ParseException {

		 
	     String file = "C:\\Users\\Admin\\Desktop\\test.json";
	     String json= new String(Files.readAllBytes(Paths.get(file)));   
	     JSONObject inputJSONOBject = new JSONObject(json);
		//getKey(inputJSONOBject, "type");
		getKey(inputJSONOBject, "topping");
		

	}

}
