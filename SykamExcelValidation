package sykamexceldata;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelWriting {
	
	static String excelFilePath = "C:\\Users\\Anil\\Downloads\\Splunk Validation.xlsx";
	 static CellStyle style = null;
	 static XSSFFont font = null;
	
	
	public static void main(String[] args) throws Exception {
		excecuteExcelTestCases();
	}

	public static void excecuteExcelTestCases() {
		DecimalFormat df = new DecimalFormat("0.00");
		try {
			FileInputStream file = new FileInputStream(new File(excelFilePath));
			@SuppressWarnings("resource")
			XSSFWorkbook workbook = new XSSFWorkbook(file);
			XSSFSheet sheet = workbook.getSheetAt(1);
			int rowSize = sheet.getLastRowNum();
			System.out.println("No of rows - "+rowSize);
			double totalCount=sheet.getRow(1).getCell(2).getNumericCellValue();
			System.out.println("Total Count - "+totalCount);
			sheet.getRow(0).createCell(3).setCellValue("Percent");
			sheet.getRow(0).createCell(4).setCellValue("Status");
			for (int i = 1; i <= rowSize; i++) {			
				
				double count=sheet.getRow(i).getCell(1).getNumericCellValue();
				System.out.print(count+" ");
				System.out.println((count>0)?"pass":"fail");
				String Percentage=df.format((totalCount/sheet.getRow(i).getCell(1).getNumericCellValue())*100);
				System.out.println("Percentage Value - "+ Percentage);
				sheet.getRow(i).createCell(3).setCellValue(Percentage);
				String status=(count>0)?"pass":"fail";
				if(status.equalsIgnoreCase("fail"))
						{
					    style = workbook.createCellStyle();
			            style.setFillForegroundColor(HSSFColor.YELLOW.index);
			            style.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
			            font = workbook.createFont();
			            //font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
			           // font.setColor(HSSFColor.WHITE.index);
			            style.setFont(font);
			            sheet.getRow(i).createCell(4).setCellValue(status);
			            sheet.getRow(i).getCell(4).setCellStyle(style);
						}
				else {
				sheet.getRow(i).createCell(4).setCellValue(status);
				}
				
			}
			file.close();
			FileOutputStream out = new FileOutputStream(excelFilePath);
			workbook.write(out);
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
